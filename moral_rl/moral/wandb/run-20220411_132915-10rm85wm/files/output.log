
[W NNPACK.cpp:51] Could not initialize NNPACK! Reason: Unsupported hardware.
Initializing and Normalizing Rewards...
Reward Normalization 0: -113.54001113330877
Reward Normalization 1: -111.10768364800347
  0%|                                                | 72/666666 [00:01<3:30:10, 52.86it/s]/home/lechapelier/Documents/Stage M2/moral_rl/moral/ppo.py:49: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  ../torch/csrc/utils/tensor_new.cpp:210.)
  trajectory_states = torch.tensor(tau['states']).float().to(device)




































  0%|▏                                            | 1923/666666 [04:40<26:57:33,  6.85it/s]
Traceback (most recent call last):
  File "/home/lechapelier/Documents/Stage M2/moral_rl/moral/moral_train_2.py", line 171, in <module>
    update_policy(ppo, dataset, optimizer, config.gamma, config.epsilon, config.ppo_epochs,
  File "/home/lechapelier/Documents/Stage M2/moral_rl/moral/ppo.py", line 133, in update_policy
    overall_loss.backward()
  File "/home/lechapelier/.local/lib/python3.9/site-packages/torch/_tensor.py", line 363, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/lechapelier/.local/lib/python3.9/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt